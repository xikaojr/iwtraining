INSTALANDO GIT&GIT BASH NO SEU POWERSHELL OU CMD

winget install --id Git.Git -e --source winget

Acessar github.com (fazer login).

Criar novo repositório (Public ou privado).

Abrir o terminal (seja git bash ou via vscode) -> Executar:

//Configurando login e senha
git config --global user.name "Seu nome";
git config --global user.email "Seu email";

Criar pasta do projeto e acessa-la.
Executar:

git init; (inicializei um projeto para o git).

git remote add origin git@github.com:nome_do_seu_usuario/nome_do_seu_projeto (atribuindo endereço do repositório no github para sua pasta).

git branch -M master (tornando a branch pri
ncipal do projeto, este comando só é preciso ser rodado 1 vez que é apos dar o git init e adicionar o remote).

### Criar arquivo na raiz do projeto com o nome README.md ###

executar as seguintes instruções:

git checkout -b nome_da_branch (aqui eu estou criando uma branch nova, um novo ramo que irá separar meu código do 'master').
git checkout master (aqui eu estou voltando para o master, e tudo que eu fiz na minha branch não irá para esta branch, caso eu já tenha commitado).

o comando de CHECKOUT faz justamente isso, eu "saiu" de "A" e vou para "B", e caso o comando venha acrescido da sigla (-b) eu estou dizendo que quero criar uma nova branch (C, por exemplo).

Lembrando, sempre que eu modificar um arquivo, e eu não commitar aquele arquivo, quando eu fizer a troca da branch, o arquivo alterado irá juntamente com os outros para a branch nova, o ideal é 
sempre commitar antes de mudar de branch, ou desfazer as alterações para não correr risco.

## COMO EU DESFAÇO TUDO QUE EU MEXI VIA COMANDO ? ##

git reset --hard origin/nome_da_branch (Este comando da um reset em seu código, tornando ele igual a ultima versão PUBLICADA no git).

### Os comandos abaixo são os mesmos independente da branch que você esteja ###

git add .; (adicionando ao "track" tudo aquilo que eu mexi e foi criado como novo, seja arquivo ou pasta).
git commit -am "Criando meu primeiro repo e subindo meu readme"; (assinando os arquivos e colocando uma mensagem)
git push origin master (ou o nome da sua branch) ; (publicando os arquivos e as alterações para o branch)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------

git bash (terminal padrão do git).
git --version (saber a versão do meu git).
git status; (verificando tudo que EU mexi no projeto na "branch" atual, seja ela o "master" ou qualquer outra).


*Vou deixar 2 links aqui como referência que eu preciso que vocês leiam atentamente, pois, vamos usar muito os termos*

https://www.atlassian.com/br/git/glossary
https://www.atlassian.com/br/git/glossary/terminology
